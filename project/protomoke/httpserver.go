package main

import (
	"encoding/json"
	"github.com/gin-gonic/gin"
	"google.golang.org/protobuf/proto"
	"log"
	"net/http"
	"time"
)

const (
	defaultQos     = 0
	defaultRetain  = false
	NBIRTHTOPIC    = "NBIRTH"
	NDEATHTOPIC    = "NDEATH"
	DBIRTHTOPIC    = "DBIRTH"
	DDEATHTOPIC    = "DDEATH"
	DDATATOPIC     = "DDATA"
	SPB            = "spBv1.0"
	controllerName = "OP102-A"
)

func (s *Service) httpRun() {
	s.apiNbirth()
	s.apiNdeath()
	s.apiDbirth()
	s.apiDdeath()
	s.apiDData()
	s.ginHttp.Run(":18091") // listen and serve on 0.0.0.0:8081 (for windows "localhost:8080")
}

func (s *Service) apiNbirth() {
	s.ginHttp.POST("/api/nbirth", func(c *gin.Context) {
		data := CommonResp{
			Code:    http.StatusOK,
			Message: "ok",
			Data:    "",
		}

		timeUnix := time.Now().Unix()
		var controllerMetrics []*ControllerStateMetric

		metric1 := &ControllerStateMetric{
			ControllerName:  "OP101",
			ControllerSn:    "4263421234",
			ControllerIp:    "192.168.60.101",
			ControllerModel: "ModelDesoutterCvi2",
			ProductionLine:  line,
			EdgeNodeId:      clientId,
			State:           true,
			Timestamp:       timeUnix,
		}

		metric2 := &ControllerStateMetric{
			ControllerName:  "OP102",
			ControllerSn:    "543745134123",
			ControllerIp:    "192.168.60.102",
			ControllerModel: "ModelDesoutterCvi2",
			ProductionLine:  line,
			EdgeNodeId:      clientId,
			State:           false,
			Timestamp:       timeUnix,
		}

		metric3 := &ControllerStateMetric{
			ControllerName:  controllerName,
			ControllerSn:    "142135345",
			ControllerIp:    "192.168.60.104",
			ControllerModel: "TCS2000",
			ProductionLine:  line,
			EdgeNodeId:      rush1,
			State:           false,
			Timestamp:       timeUnix,
		}
		controllerMetrics = append(controllerMetrics, metric1, metric2, metric3)

		NBirthPayload := NBIRTH{
			Timestamp: timeUnix,
			Metrics: []*IntMetric{
				{
					Name:      "bdseq",
					Timestamp: timeUnix,
					DataType:  "Int64",
					Value:     0,
				},
				{
					Name:      "Node Control/Rebirth",
					Timestamp: timeUnix,
					DataType:  "Int64",
					Value:     1,
				},
				{
					Name:      clientId,
					Timestamp: timeUnix,
					DataType:  "Int64",
					Value:     1,
				},
			},
			ControllerStateMetrics: controllerMetrics,
			EdgeNodeId:             clientId,
			Seq:                    1,
		}
		NBIRTHBytes, err := proto.Marshal(&NBirthPayload)
		if err != nil {
			log.Println("proto nBirthChan marshal failed", err)
		}
		topic := SPB + "/" + line + "/" + line + "/" + NBIRTHTOPIC + "/" + rush1
		tokenPub := s.mqttClient.Publish(topic, defaultQos, defaultRetain, NBIRTHBytes)
		tokenPub.Wait()

		c.JSON(http.StatusOK, data)
	})

}

func (s *Service) apiNdeath() {
	s.ginHttp.POST("/api/ndeath", func(c *gin.Context) {
		data := CommonResp{
			Code:    http.StatusOK,
			Message: "ok",
			Data:    "",
		}

		timeUnix := time.Now().Unix()
		NDEATHPayload := &NDEATH{
			Timestamp:  timeUnix,
			EdgeNodeId: clientId,
			Metrics: []*IntMetric{
				{
					Name:      "bdseq",
					Timestamp: timeUnix,
					DataType:  "Int64",
					Value:     0,
				},
			},
		}

		NDEATHBytes, err := proto.Marshal(NDEATHPayload)
		if err != nil {
			log.Println("NDEATH marshal failed", err)
		}
		topic := SPB + "/" + line + "/" + line + "/" + NDEATHTOPIC + "/" + rush1
		tokenPub := s.mqttClient.Publish(topic, defaultQos, defaultRetain, NDEATHBytes)
		tokenPub.Wait()

		c.JSON(http.StatusOK, data)
	})
}

func (s *Service) apiDbirth() {
	s.ginHttp.POST("/api/dbirth", func(c *gin.Context) {
		data := CommonResp{
			Code:    http.StatusOK,
			Message: "ok",
			Data:    "",
		}

		timeUnix := time.Now().Unix()
		Metrics := []*ControllerStateMetric{
			{
				ControllerName:  controllerName,
				ControllerSn:    "142135345",
				ControllerIp:    "192.168.60.104",
				ControllerModel: "TCS2000",
				ProductionLine:  line,
				EdgeNodeId:      rush1,

				State:     true,
				Timestamp: timeUnix,
			},
		}
		payload := &DBIRTH{
			Timestamp: timeUnix,
			Metrics:   Metrics,
			Seq:       2,
		}
		DDBIRTHBytes, err := proto.Marshal(payload)
		if err != nil {
			log.Println("DBIRTH marshal failed", err)
		}
		topic := SPB + "/" + line + "/" + line + "/" + DBIRTHTOPIC + "/" + rush1 + "/" + controllerName
		tokenPub := s.mqttClient.Publish(topic, defaultQos, defaultRetain, DDBIRTHBytes)
		tokenPub.Wait()

		c.JSON(http.StatusOK, data)
	})
}

func (s *Service) apiDdeath() {
	s.ginHttp.POST("/api/ddeath", func(c *gin.Context) {
		data := CommonResp{
			Code:    http.StatusOK,
			Message: "ok",
			Data:    "",
		}

		timeUnix := time.Now().Unix()

		dDeathPayload := &DDEATH{
			Timestamp:      timeUnix,
			ControllerSn:   "142135345",
			ControllerName: controllerName,
			Seq:            3,
			ProductionLine: line,
		}
		DDEATHBytes, err := proto.Marshal(dDeathPayload)
		if err != nil {
			log.Println("DBIRTH marshal failed", err)
		}
		topic := SPB + "/" + line + "/" + line + "/" + DDEATHTOPIC + "/" + rush1 + "/" + controllerName
		tokenPub := s.mqttClient.Publish(topic, defaultQos, defaultRetain, DDEATHBytes)
		tokenPub.Wait()

		c.JSON(http.StatusOK, data)
	})
}

const pdo = "{\"entity_id\":\"22M27164_OP102-A_0000000008_1702966983\",\"scenario\":\"tightening\",\"series\":[{\"dimension\":\"torque\",\"value\":[0.0,0.0,0.017215164,0.011476777,0.009563981,0.011476777,0.0133895725,0.007651184,0.009563981,0.007651184,0.011476777,0.009563981,0.007651184,0.009563981,0.009563981,0.009563981,0.007651184,0.0057383883,0.009563981,0.0057383883,0.0057383883,0.007651184,0.0057383883,0.007651184,0.007651184,0.007651184,0.0057383883,0.0057383883,0.0057383883,0.0057383883,0.007651184,0.0057383883,0.003825592,0.009563981,0.009563981,0.009563981,0.009563981,0.009563981,0.007651184,0.0057383883,0.007651184,0.009563981,0.009563981,0.007651184,0.007651184,0.011476777,0.007651184,0.007651184,0.007651184,0.009563981,0.007651184,0.0057383883,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.001912796,0.001912796,0.001912796,0.003825592,0.003825592,0.003825592,0.003825592,0.0057383883,0.0057383883,0.003825592,0.003825592,0.0057383883,0.003825592,0.003825592,0.0057383883,0.0057383883,0.0057383883,0.0057383883,0.0057383883,0.0057383883,0.003825592,0.0057383883,0.003825592,0.0057383883,0.003825592,0.003825592,0.0057383883,0.0057383883,0.003825592,0.0057383883,0.0057383883,0.0057383883,0.0057383883,0.0057383883,0.0057383883,0.0057383883,0.0057383883,0.0057383883,0.0057383883,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.0,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.0,0.0,0.001912796,0.001912796,0.001912796,0.001912796,0.001912796,0.003825592,0.003825592,0.003825592,0.003825592,0.003825592,0.003825592,0.003825592,0.003825592,0.003825592,0.0057383883,0.007651184,0.007651184,0.007651184,0.007651184,0.007651184,0.007651184,0.007651184,0.009563981,0.009563981,0.009563981,0.009563981,0.007651184,0.009563981,0.009563981,0.0057383883,0.009563981,0.007651184,0.007651184,0.009563981,0.009563981,0.011476777,0.009563981,0.009563981,0.011476777,0.011476777,0.015302368,0.0133895725,0.011476777,0.009563981,0.009563981,0.011476777,0.011476777,0.011476777,0.009563981,0.009563981,0.011476777,0.011476777,0.011476777,0.0133895725,0.0133895725,0.0133895725,0.0133895725,0.011476777,0.011476777,0.011476777,0.009563981,0.011476777,0.011476777,0.0133895725,0.0133895725,0.009563981,0.011476777,0.011476777,0.011476777,0.011476777,0.0133895725,0.0133895725,0.001912796,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]},{\"dimension\":\"angle\",\"value},{\"dimension\":\"time\",\"value\":[0.0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.56,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99,1.0,1.01,1.02,1.03,1.04,1.05,1.06,1.07,1.08,1.09,1.1,1.11,1.12,1.13,1.14,1.15,1.16,1.17,1.18,1.19,1.2,1.21,1.22,1.23,1.24,1.25,1.26,1.27,1.28,1.29,1.3,1.31,1.32,1.33,1.34,1.35,1.36,1.37,1.38,1.39,1.4,1.41,1.42,1.43,1.44,1.45,1.46,1.47,1.48,1.49,1.5,1.51,1.52,1.53,1.54,1.55,1.56,1.57,1.58,1.59,1.6,1.61,1.62,1.63,1.64,1.65,1.66,1.67,1.68,1.69,1.7,1.71,1.72,1.73,1.74,1.75,1.76,1.77,1.78,1.79,1.8,1.81,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.9,1.91,1.92,1.93,1.94,1.95,1.96,1.97,1.98,1.99,2.0,2.01,2.02,2.03,2.04,2.05,2.06,2.07,2.08,2.09,2.1,2.11,2.12,2.13,2.14,2.15,2.16,2.17,2.18,2.19,2.2,2.21,2.22,2.23,2.24,2.25,2.26,2.27,2.28,2.29,2.3,2.31,2.32,2.33,2.34,2.35]}]}"

func (s *Service) apiDData() {
	s.ginHttp.POST("/api/ddata", func(c *gin.Context) {
		data := CommonResp{
			Code:    http.StatusOK,
			Message: "ok",
			Data:    "",
		}
		DDATAPAYLOAD := &DDATA{}
		ddataStr := "{\"timestamp\":1705633755,\"metrics\":[{\"name\":\"TTEHAFF00088_L1-OPleetx_1971_1705633556\",\"timestamp\":1705633755,\"dataType\":\"tightening\",\"value\":{\"industry\":\"assembly\",\"scenario\":\"tightening\",\"type\":\"collection\",\"entity_id\":\"TTEHAFF00088_L1-OPleetx_1971_1705633556\",\"final_object\":{\"entity_id\":\"TTEHAFF00088_L1-OPleetx_1971_1705633556\",\"scenario\":\"tightening\",\"factory_code\":\"leetx\",\"product\":{\"no\":\"L1-OPleetx_0_1_2\"},\"components\":[{\"track_no\":\"L1-OPleetx_0_1_2\"}],\"user_entity_id\":\"1\",\"workcenter_code\":\"L1-OPleetx\",\"equipment\":{\"name\":\"L1-OPleetx\",\"sn\":\"TTTCAFH00078\",\"type\":\"tightening_controller\",\"tools\":[{\"sn\":\"TTEHAFF00088\",\"unit\":\"1\",\"channel\":1,\"type\":\"tightening_tool\"}],\"manufactory_code\":\"Leetx\",\"model\":\"TCS2000\"},\"program\":{\"name\":\"pset2\",\"type\":\"pset\",\"code\":2,\"strategy\":\"ADW\",\"batch\":1,\"batch_count\":1},\"measure_result\":\"ok\",\"measure_id\":\"1971\",\"measure_time\":1705633556,\"error_codes\":[\"0\"],\"control_time\":\"2024-01-19T11:05:56+08:00\",\"dimensions\":[{\"dimension\":\"torque\",\"value\":1.15},{\"dimension\":\"angle\",\"value\":2.14}],\"specs\":[{\"dimension\":\"torque\",\"spec\":{\"max\":3,\"min\":0.2,\"target\":1.1,\"threshold\":0}},{\"dimension\":\"angle\",\"spec\":{\"max\":3600,\"min\":0,\"threshold\":0}}],\"procedure_objects\":[{\"procedure_object\":[{\"dimension\":\"torque\",\"value\":1.01,\"spec\":{\"max\":4.5,\"min\":0.1,\"target\":1,\"threshold\":0}},{\"dimension\":\"angle\",\"value\":72.94,\"spec\":{\"max\":3600,\"min\":0,\"threshold\":0}},{\"dimension\":\"result\",\"value\":1}]},{\"procedure_object\":[{\"dimension\":\"torque\",\"value\":1.15,\"spec\":{\"max\":3,\"min\":0.2,\"target\":1.1,\"threshold\":0}},{\"dimension\":\"angle\",\"value\":2.14,\"spec\":{\"max\":3600,\"min\":0,\"threshold\":0}},{\"dimension\":\"result\",\"value\":1}]}],\"identifiers\":{}},\"process_object\":{\"entity_id\":\"TTEHAFF00088_L1-OPleetx_1971_1705633556\",\"scenario\":\"tightening\",\"series\":[{\"dimension\":\"torque\",\"value\":[0.24954921,0.2487777,0.24954921,0.25032073,0.25032073,0.25032073,0.25109226,0.25109226,0.25032073,0.25109226,0.25186375,0.25263524,0.2541783,0.2588073,0.26497936,0.26883692,0.273466,0.27809504,0.28195256,0.2842671,0.2858101,0.28658164,0.2858101,0.2850386,0.2850386,0.2842671,0.2834956,0.2842671,0.2842671,0.2842671,0.2842671,0.2850386,0.2850386,0.2850386,0.28658164,0.28735313,0.28735313,0.28735313,0.28658164,0.28658164,0.28658164,0.2858101,0.2858101,0.2858101,0.2858101,0.2850386,0.2842671,0.2842671,0.2834956,0.28272408,0.28272408,0.2834956,0.2842671,0.2842671,0.2842671,0.2842671,0.2850386,0.2858101,0.2850386,0.2842671,0.2850386,0.2850386,0.2842671,0.2834956,0.2834956,0.2842671,0.2834956,0.28272408,0.28272408,0.28272408,0.28272408,0.28272408,0.2834956,0.2834956,0.2842671,0.2850386,0.2850386,0.28735313,0.28812462,0.28735313,0.28735313,0.28658164,0.28658164,0.28735313,0.28658164,0.2858101,0.2858101,0.2850386,0.2842671,0.2842671,0.2842671,0.2842671,0.2842671,0.2842671,0.2850386,0.2858101,0.2858101,0.2858101,0.28658164,0.28735313,0.28735313,0.28735313,0.28735313,0.28658164,0.2858101,0.2850386,0.2850386,0.2850386,0.2842671,0.2842671,0.2834956,0.28272408,0.28272408,0.28272408,0.28272408,0.2834956,0.2842671,0.2842671,0.2842671,0.2850386,0.2858101,0.2858101,0.2858101,0.2850386,0.2842671,0.2842671,0.2842671,0.2842671,0.2842671,0.2842671,0.2834956,0.28272408,0.28272408,0.28272408,0.28272408,0.2834956,0.2842671,0.2850386,0.2850386,0.2850386,0.28658164,0.28889614,0.2912107,0.2919822,0.2927537,0.29352522,0.29352522,0.29352522,0.29429674,0.29506823,0.29506823,0.29583973,0.29583973,0.29583973,0.29661125,0.29661125,0.29661125,0.29738277,0.29815426,0.29892576,0.29892576,0.29892576,0.29969728,0.3004688,0.3012403,0.3004688,0.29969728,0.29969728,0.29969728,0.29892576,0.29738277,0.29738277,0.29738277,0.29583973,0.29583973,0.29661125,0.29583973,0.29506823,0.29506823,0.29506823,0.29506823,0.29583973,0.29583973,0.29506823,0.29506823,0.29506823,0.29506823,0.29506823,0.29429674,0.29429674,0.29429674,0.29352522,0.2927537,0.2919822,0.2919822,0.2919822,0.2912107,0.2904392,0.2912107,0.2912107,0.2919822,0.29352522,0.29352522,0.2927537,0.2919822,0.2927537,0.29352522,0.29352522,0.29352522,0.29352522,0.29352522,0.29352522,0.2927537,0.2927537,0.2927537,0.2919822,0.2919822,0.2919822,0.2919822,0.29352522,0.29506823,0.29583973,0.29738277,0.29892576,0.3012403,0.3027833,0.30432633,0.30818385,0.31126988,0.31358445,0.31667048,0.318985,0.32129952,0.32361406,0.32592857,0.32747158,0.32824308,0.32978612,0.33055764,0.33132917,0.33287215,0.3351867,0.33750123,0.33981574,0.34135875,0.34213024,0.3436733,0.34521627,0.3475308,0.34984535,0.35138837,0.35215986,0.35215986,0.35293138,0.35293138,0.35293138,0.3544744,0.3552459,0.3552459,0.3560174,0.35756046,0.35756046,0.35756046,0.35833195,0.35910344,0.35987496,0.35987496,0.3606465,0.36218947,0.36218947,0.3606465,0.35987496,0.3606465,0.36141798,0.36218947,0.36373252,0.3652755,0.36604702,0.36604702,0.36604702,0.36681855,0.36681855,0.36681855,0.36836153,0.37067607,0.3729906,0.37453362,0.37607664,0.37761968,0.37916267,0.3807057,0.3822487,0.38456324,0.38764927,0.3907353,0.39459285,0.39999342,0.40616548,0.4092515,0.41156605,0.4161951,0.41928113,0.42236716,0.42699623,0.43239677,0.43779734,0.44396943,0.450913,0.45785657,0.46865767,0.4794588,0.49257445,0.50800467,0.52420634,0.540408,0.5550667,0.5743544,0.5936421,0.6121583,0.6291315,0.6437901,0.6630779,0.68159413,0.69856733,0.7170835,0.73714274,0.75720197,0.7749467,0.7950059,0.8127506,0.8328098,0.85286903,0.8675277,0.88758695,0.90610313,0.92307633,0.94082105,0.95933723,0.97939646,0.9932836,1.0071708,1.022601,1.0295446,1.0310876,1.0341736,1.0341736,1.0280015,1.0133429,0.9955982,0.98171103,0.9701383,0.9616518,0.95625126,0.9531652,0.9531652,0.95547974,0.9585657,0.9616518,0.9662808,0.9732244,0.9809395,0.9886546,0.9994557,1.0094852,1.0179719,1.0280015,1.0372596,1.0449747,1.0496037,1.0519183,1.0519183,1.0488322,1.0457462,1.0442033,1.0434318,1.0449748,1.0503752,1.0557759,1.0596334,1.0642624,1.06812,1.069663,1.063491,1.061948,1.071206,1.0796926,1.0881792,1.0881792,1.0889508,1.0989803,1.1105529,1.1205826,1.119811,1.119811,1.1290692,1.1398703,1.1468139,1.1483569,1.1406418,1.1267546,1.1113244,1.0974373,1.0897222,1.0835502,1.0789211,1.0750635,1.0719776,1.069663,1.0673485,1.0658054,1.0634909,1.0619478,1.0619478,1.0619478,1.0619478,1.0627193,1.0634909,1.0634909,1.0642624,1.0642624,1.0627193,1.0619478,1.0596334,1.0550044,1.0496037,1.0442033,1.0388026,1.0303161,1.0218294,1.0125713,1.0025418,0.9925121,0.9824825,0.9732244,0.96319485,0.95547974,0.9469931,0.9385065,0.9315629,0.9207618,0.9091892,0.89915955,0.88912994,0.8791003,0.86984223,0.8621271,0.8520975,0.8428395,0.83435285,0.8243232,0.8158366,0.8065785,0.7965489,0.7865193,0.77803266,0.77031755,0.7626025,0.75643045,0.7479439,0.7402288,0.73251367,0.7240271,0.7186265,0.71322596,0.7070539,0.7016533,0.6970243,0.69316673,0.6900807,0.6869947,0.6831371,0.6800511,0.67696506,0.6731075,0.67079294,0.6684785,0.66693544,0.6661639,0.6646209,0.66307783,0.66307783,0.66307783,0.66307783]},{\"dimension\":\"angle\",\"value\":[0,0.0008789197,0.0019775692,0.004614328,0.0057129776,0.0057129776,0.0072510866,0.009448387,0.009448387,0.017798122,0.036914624,0.07207141,0.12744334,0.20808423,0.31728998,0.45659876,0.6257908,0.82157016,1.0371251,1.2641062,1.4961408,1.7288349,1.9593315,2.1874113,2.4150515,2.641593,2.8659372,3.0900617,3.313747,3.5363333,3.7589195,3.9830441,4.2078276,4.432172,4.6587133,4.8865733,5.112895,5.559606,5.781973,6.0028014,6.2240696,6.447095,6.67122,6.895784,7.1221056,7.349306,7.57387,7.7966766,8.019702,8.242728,8.464875,8.6885605,8.914003,9.140105,9.366647,9.594506,9.821268,10.045832,10.270395,10.4947405,10.717766,10.940132,11.164257,11.388602,11.612726,11.838168,12.06427,12.289274,12.51252,12.736205,12.959669,13.181817,13.403964,13.628088,13.853532,14.078316,14.303758,14.529201,14.753106,14.974593,15.196521,15.417569,15.637299,15.857907,16.080494,16.30374,16.527205,16.752428,16.97853,17.203533,17.428097,17.652882,17.876566,18.099592,18.323715,18.548061,18.548061,18.994991,19.220873,19.446537,19.67044,19.894346,20.11825,20.340618,20.562325,20.78557,21.009254,21.232283,21.456846,21.683386,21.909708,22.134052,22.134052,22.58362,22.807306,23.03099,23.255335,23.47968,23.703585,23.929688,24.156666,24.382328,24.607553,24.833216,25.05778,25.280584,25.50383,25.726856,25.949444,26.172909,26.399012,26.625551,26.850117,27.0749,27.299465,27.52227,27.7431,27.965025,28.18783,28.411297,28.636082,28.863281,29.090263,29.315704,29.54071,29.765053,29.987202,30.208908,30.432154,30.657156,30.88282,31.11046,31.339638,31.567938,31.795576,32.02234,32.247124,32.469707,32.692734,32.91664,33.140545,33.36533,33.592747,33.82039,34.04605,34.270836,34.49408,34.715347,34.9353,35.157227,35.38047,35.604595,35.82982,36.05768,36.2851,36.5101,36.733788,36.956814,37.17896,37.401768,37.62611,37.851772,38.078094,38.306614,38.536015,38.76343,38.988655,39.21388,39.43756,39.660152,39.883617,40.10796,40.332085,40.557087,40.78407,41.01083,41.234295,41.45732,41.679688,41.901176,42.121784,42.343933,42.567616,42.79218,43.018063,43.245483,43.471367,43.694393,43.9172,44.139782,44.361713,44.58386,44.808205,45.034084,45.260406,45.488262,45.716347,45.942886,46.16833,46.393993,46.618996,46.843124,47.067684,47.29313,47.51813,47.743134,47.969017,48.194458,48.4177,48.640736,48.863758,49.085464,49.306293,49.5291,49.753223,49.97735,50.200813,50.4256,50.650158,50.873184,51.09665,51.320335,51.54336,51.766605,51.991394,52.21684,52.4414,52.66706,52.8936,53.119926,53.345146,53.57059,53.795597,54.019283,54.24341,54.467968,54.691433,54.91446,55.139465,55.365562,55.589687,55.813595,56.0375,56.260963,56.48289,56.706135,56.930264,57.154167,57.378513,57.60549,57.83247,58.057476,58.28226,58.50748,58.731388,58.95463,59.178318,59.402443,59.626568,59.85267,60.08031,60.30751,60.533833,60.760815,60.986694,61.21016,61.433186,61.655773,61.87814,62.100723,62.32595,62.552273,62.776833,63.000298,63.223324,63.444378,63.662567,63.881195,64.101364,64.321976,64.54302,64.76605,64.98952,65.21166,65.43271,65.6531,65.87151,66.08751,66.30504,66.52279,66.74098,66.95962,67.18,67.40061,67.618805,67.83546,68.04882,68.25822,68.46652,68.67636,68.885765,69.09517,69.30611,69.51947,69.73195,69.941345,70.147675,70.352684,70.55725,70.76248,70.9688,71.17645,71.38366,71.589325,71.79411,71.99868,72.20039,72.400566,72.60118,72.79037,72.946815,73.06327,73.14765,73.21467,73.267395,73.29311,73.29904,73.299706,73.30234,73.31003,73.32409,73.34496,73.37287,73.407585,73.44824,73.49372,73.54338,73.5959,73.65083,73.708176,73.76707,73.828156,73.89078,73.95603,74.024155,74.09205,74.15093,74.19642,74.23004,74.2564,74.28058,74.3065,74.33639,74.370445,74.4078,74.44713,74.48712,74.527336,74.56754,74.60819,74.64884,74.69015,74.73388,74.78002,74.82836,74.877144,74.9257,74.97339,75.0204,75.06611,75.1105,75.154,75.19772,75.24101,75.27573,75.29221,75.28914,75.27266,75.25002,75.22432,75.19751,75.17026,75.14279,75.11577,75.08896,75.0626,75.036,75.009415,74.983055,74.957344,74.931854,74.90703,74.882416,74.85847,74.83452,74.809906,74.78398,74.756516,74.726845,74.69455,74.65939,74.62028,74.57765,74.53107,74.48163,74.428894,74.3733,74.31486,74.25377,74.190704,74.12654,74.062164,73.99757,73.93208,73.864624,73.7952,73.72312,73.64951,73.5748,73.49966,73.424286,73.33991,73.27553,73.2028,73.13051,73.04767,72.98197,72.895615,72.818054,72.74005,72.66226,72.58492,72.50889,72.434845,72.362335,72.29005,72.21687,72.14304,72.06877,71.99516,71.92221,71.85124,71.782684,71.71721,71.65524,71.596794,71.54054,71.486275,71.43991,71.38123,71.33048,71.2817,71.23468,71.19008,71.14789,71.10767,71.069664,71.034065,71.00111,70.97122,70.94464,70.92113,70.90112]},{\"dimension\":\"time\",\"value\":[0,0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.01,0.011,0.012,0.013,0.014,0.015,0.016,0.017,0.018,0.019,0.02,0.021,0.022,0.023,0.024,0.025,0.026,0.027,0.028,0.029,0.03,0.031,0.032,0.033,0.034,0.035,0.036,0.037,0.038,0.039,0.04,0.041,0.042,0.043,0.044,0.045,0.046,0.047,0.048,0.049,0.05,0.051,0.052,0.053,0.054,0.055,0.056,0.057,0.058,0.059,0.06,0.061,0.062,0.063,0.064,0.065,0.066,0.067,0.068,0.069,0.07,0.071,0.072,0.073,0.074,0.075,0.076,0.077,0.078,0.079,0.08,0.081,0.082,0.083,0.084,0.085,0.086,0.087,0.088,0.089,0.09,0.091,0.092,0.093,0.094,0.095,0.096,0.097,0.098,0.099,0.1,0.101,0.102,0.103,0.104,0.105,0.106,0.107,0.108,0.109,0.11,0.111,0.112,0.113,0.114,0.115,0.116,0.117,0.118,0.119,0.12,0.121,0.122,0.123,0.124,0.125,0.126,0.127,0.128,0.129,0.13,0.131,0.132,0.133,0.134,0.135,0.136,0.137,0.138,0.139,0.14,0.141,0.142,0.143,0.144,0.145,0.146,0.147,0.148,0.149,0.15,0.151,0.152,0.153,0.154,0.155,0.156,0.157,0.158,0.159,0.16,0.161,0.162,0.163,0.164,0.165,0.166,0.167,0.168,0.169,0.17,0.171,0.172,0.173,0.174,0.175,0.176,0.177,0.178,0.179,0.18,0.181,0.182,0.183,0.184,0.185,0.186,0.187,0.188,0.189,0.19,0.191,0.192,0.193,0.194,0.195,0.196,0.197,0.198,0.199,0.2,0.201,0.202,0.203,0.204,0.205,0.206,0.207,0.208,0.209,0.21,0.211,0.212,0.213,0.214,0.215,0.216,0.217,0.218,0.219,0.22,0.221,0.222,0.223,0.224,0.225,0.226,0.227,0.228,0.229,0.23,0.231,0.232,0.233,0.234,0.235,0.236,0.237,0.238,0.239,0.24,0.241,0.242,0.243,0.244,0.245,0.246,0.247,0.248,0.249,0.25,0.251,0.252,0.253,0.254,0.255,0.256,0.257,0.258,0.259,0.26,0.261,0.262,0.263,0.264,0.265,0.266,0.267,0.268,0.269,0.27,0.271,0.272,0.273,0.274,0.275,0.276,0.277,0.278,0.279,0.28,0.281,0.282,0.283,0.284,0.285,0.286,0.287,0.288,0.289,0.29,0.291,0.292,0.293,0.294,0.295,0.296,0.297,0.298,0.299,0.3,0.301,0.302,0.303,0.304,0.305,0.306,0.307,0.308,0.309,0.31,0.311,0.312,0.313,0.314,0.315,0.316,0.317,0.318,0.319,0.32,0.321,0.322,0.323,0.324,0.325,0.326,0.327,0.328,0.329,0.33,0.331,0.332,0.333,0.334,0.335,0.336,0.337,0.338,0.339,0.34,0.341,0.342,0.343,0.344,0.345,0.346,0.347,0.348,0.349,0.35,0.351,0.352,0.353,0.354,0.355,0.356,0.357,0.358,0.359,0.36,0.361,0.362,0.363,0.364,0.365,0.366,0.367,0.368,0.369,0.37,0.371,0.372,0.373,0.374,0.375,0.376,0.377,0.378,0.379,0.38,0.381,0.382,0.383,0.384,0.385,0.386,0.387,0.388,0.389,0.39,0.391,0.392,0.393,0.394,0.395,0.396,0.397,0.398,0.399,0.4,0.401,0.402,0.403,0.404,0.405,0.406,0.407,0.408,0.409,0.41,0.411,0.412,0.413,0.414,0.415,0.416,0.417,0.418,0.419,0.42,0.421,0.422,0.423,0.424,0.425,0.426,0.427,0.428,0.429,0.43,0.431,0.432,0.433,0.434,0.435,0.436,0.437,0.438,0.439,0.44,0.441,0.442,0.443,0.444,0.445,0.446,0.447,0.448,0.449,0.45,0.451,0.452,0.453,0.454,0.455,0.456,0.457,0.458,0.459,0.46,0.461,0.462,0.463,0.464,0.465,0.466,0.467,0.468,0.469,0.47,0.471,0.472,0.473,0.474,0.475,0.476,0.477,0.478,0.479,0.48,0.481,0.482]},{\"dimension\":\"gradient\",\"value\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.038218495,0.035722733,0.031303123,0.02695243,0.023811538,0.021043725,0.017785056,0.0155862775,0.01443208,0.01264384,0.011181196,0.0104811,0.009443171,0.007649607,0.0056042452,0.004594336,0.0032307317,0.0019231016,0.0012781894,0.00085191405,0.00042662985,0.00020139357,0.0002018297,0.00040442654,0.00040510308,0.00040546956,0.0006082355,0.0004054461,0.00040516543,0.00020233366,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.00042915894,0.00021434785,0,0,0,0,0,0,0,0,0.00021528576,0,0.0006448854,0.0010748636,0.0010757203,0.0010763796,0.0006466271,0.00086370157,0.0012971482,0.0010811606,0.00086503173,0.0008650315,0.00064821064,0.00021582832,0.00021577529,0,0,0,0,0,0,0,0,0,0,0.00021490367,0.00042973662,0.00042968415,0.00043003436,0.0004305536,0.00021537821,0.0002154311,0.00021553683,0,0,0,0,0,0,0,0,0,0,0,0,0,0.000214505,0.00021441311,0,0,0,0.00021465402,0.00042947382,0.0004044186,0.00042989443,0.00021480674,0,0,0,0,0,0,0,0,0,0.00064682565,0.0012920562,0.0019360776,0.0021497444,0.0023631214,0.0025773246,0.0027951736,0.003014251,0.003230748,0.0034459152,0.0034448588,0.0034402085,0.0032177132,0.0029978899,0.0032077255,0.0032047976,0.0027774847,0.0023531963,0.0019274423,0.0019282631,0.0017145402,0.0015000341,0.0017118247,0.0019226418,0.0019213478,0.0014944789,0.0012818369,0.0010700899,0.0010728355,0.00085978885,0.00021521487,0.00021537335,0.00021534697,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0002152017,0.0004306856,0.00043129365,0.00043185079,0.00043173597,0.0006470957,0.00043091498,0.00021507507,0,0,0,0.00021420386,0.00085700856,0.0008577928,0.0010726398,0.0015006765,0.0021425213,0.0025693001,0.0029942328,0.004059888,0.0051298514,0.0057756486,0.0066373707,0.007506606,0.008166505,0.008820409,0.009469285,0.009473347,0.009262013,0.009475686,0.009260326,0.009051092,0.0088393735,0.009058303,0.009281394,0.008855146,0.008419547,0.007982375,0.0075476593,0.00732391,0.007312251,0.007305081,0.007088069,0.0068707503,0.0066531906,0.006440536,0.006226601,0.006009322,0.0060093305,0.0055811093,0.004934413,0.0045017693,0.004502608,0.004290036,0.00386173,0.003649424,0.0032242108,0.0027967182,0.0023671747,0.002368201,0.002799288,0.0025815822,0.0021496164,0.0019344109,0.001718849,0.0017177996,0.0019331104,0.002149612,0.002149858,0.0023647055,0.0023645598,0.002148026,0.0021446222,0.0019280365,0.0019268629,0.0021391185,0.0023520435,0.0029964305,0.0038567714,0.004502595,0.0047201808,0.00493835,0.005151181,0.005146757,0.005359916,0.0060042012,0.006864039,0.0079477,0.009260887,0.011010186,0.011894208,0.012132144,0.012799446,0.013017973,0.013450245,0.014319791,0.01541033,0.016505761,0.017843068,0.019422835,0.020773541,0.022997474,0.025222322,0.027873376,0.030707406,0.03353989,0.03728748,0.040842872,0.045113638,0.0499292,0.054584663,0.05834137,0.061219204,0.06544915,0.06918569,0.07216117,0.07564451,0.07853756,0.081528686,0.08322037,0.08498073,0.0858285,0.087284155,0.089135796,0.087912284,0.08824236,0.088335626,0.0884758,0.08961213,0.08962897,0.09037802,0.0901026,0.090233065,0.09143661,0.09078157,0.08949768,0.08824907,0.08749713,0.08376471,0.07557923,0.06674932,0.05470094,0.041853715,0.028653316,0.013160345,0,0,0,0,0,0,0,0,0,0,0,0.030996326,0.059193477,0.08117774,0.09785933,0.108907714,0.11634218,0.118645646,0.1148554,0.10993662,0.10658078,0.10192133,0.097097434,0.09643118,0.0959999,0.08891956,0.08399333,0.08027718,0.06965656,0.044997945,0.029083572,0.03610488,0.044743706,0.0562082,0.059001222,0.0631633,0.0787407,0.09551923,0.106961206,0.097714126,0.08972578,0.09804783,0.11053447,0.12290215,0.135094,0.14947544,0.1458632,0.10867844,0.060538486,0.0071071647,0,0,6.8148437,0.51783496,0.35217798,0.24438906,0.19038285,0.19070564,0.20229867,0.20865808,0.20862076,0.18939385,0.15452032,0.11567176,0.08204724,0.061209165,0.045790505,0.03771657,0.029651817,0.026931843,0.030644419,0.03538858,0.04087833,0.044200156,0.053416535,0.06381716,0.07394316,0.08390953,0.093892366,0.103009686,0.10948923,0.11721771,0.12095656,0.12360326,0.12715894,0.12770608,0.13015436,0.13279942,0.13319208,0.13634239,0.13597801,0.13530889,0.1316181,0.1314418,0.12830369,0.12558553,0.1249138,0.12255729,0.12303103,0.12390057,0.12512651,0.1266267,0.124374196,0.12140564,0.11925208,0.1169963,0.114994735,0.113654576,0.1154271,0.11129193,0.10999057,0.10947516,0.10729859,0.10591983,0.103228495,0.099598184,0.09446043,0.09196617,0.089519285,0.08719005,0.08743549,0.08377929,0.08084636,0.07692039,0.070808634,0.06909818,0.06722387,0.06188567,0.057092447,0.053089485]}]}}}],\"seq\":2,\"controller_name\":\"L1-OPleetx\",\"production_line\":\"L1\",\"edge_node_id\":\"rush1\"}"
		err := json.Unmarshal([]byte(ddataStr), DDATAPAYLOAD)
		DDEATHBytes, err := proto.Marshal(DDATAPAYLOAD)
		if err != nil {
			log.Println("ddata marshal failed", err)
		}
		topic := SPB + "/" + line + "/" + line + "/" + DDATATOPIC + "/" + rush1 + "/" + controllerName
		log.Println("发送DDATA topic :", topic)
		tokenPub := s.mqttClient.Publish(topic, defaultQos, defaultRetain, DDEATHBytes)
		tokenPub.Wait()

		c.JSON(http.StatusOK, data)
	})
}

type CommonResp struct {
	Code    int    `json:"code,omitempty"`
	Message string `json:"message,omitempty"`
	Data    string `json:"data"`
}
